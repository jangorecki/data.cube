variables:
  CI_TOOLS: "https://svn.r-project.org/R/branches/tools4pkgs/src/library/tools/R/packages.R"
  CRAN_MIRROR: "https://cloud.r-project.org"
  BIOC_MIRROR: "https://bioconductor.org/packages/3.4/bioc"
  _R_CHECK_FORCE_SUGGESTS_: "FALSE"

stages:
  - dependencies
  - build
  - test
  - integration
  - deploy

mirror-packages:
  stage: dependencies
  tags:
    - linux
  image: docker.io/jangorecki/r-base-dev
  script:
    - mkdir -p bus/$CI_BUILD_NAME/cran/src/contrib
    # mirror R dependencies
    - Rscript -e 'source(Sys.getenv("CI_TOOLS")); mirror.packages(packages.dcf("DESCRIPTION", "all"), repos=c(Sys.getenv("CRAN_MIRROR"), Sys.getenv("BIOC_MIRROR")), repodir="bus/mirror-packages/cran")'
    #- Rscript -e 'source(Sys.getenv("CI_TOOLS")); mirror.packages(type="win.binary", packages.dcf("DESCRIPTION", "all"), repos=c(Sys.getenv("CRAN_MIRROR"), Sys.getenv("BIOC_MIRROR")), repodir="bus/mirror-packages/cran")'
  artifacts:
    expire_in: 2 weeks
    paths:
      - bus

build:
  stage: build
  tags:
    - linux
  image: docker.io/jangorecki/r-builder
  dependencies:
  - mirror-packages
  script:
    - Rscript -e 'install.packages("knitr", repos=file.path("file:",normalizePath("bus/mirror-packages/cran")))'
    - rm -r bus
    - echo "Revision:" $CI_BUILD_REF >> ./DESCRIPTION
    - R CMD build .
    - mkdir -p bus/$CI_BUILD_NAME/cran/src/contrib
    - mv $(ls -1t data.cube_*.tar.gz | head -n 1) bus/$CI_BUILD_NAME/cran/src/contrib/.
    - Rscript -e 'tools::write_PACKAGES(contrib.url("bus/build/cran"), addFiles=TRUE, fields="Revision")'
  artifacts:
    expire_in: 2 weeks
    paths:
      - bus

test-r-release: # R-release most comprehensive tests, force all suggests
  stage: test
  tags:
    - linux
  variables: # unlike CRAN
    _R_CHECK_CRAN_INCOMING_: "FALSE"
    _R_CHECK_CRAN_INCOMING_REMOTE_: "FALSE"
    _R_CHECK_FORCE_SUGGESTS_: "TRUE"
    OPENBLAS_MAIN_FREE: "1"
  image: docker.io/jangorecki/r-builder
  dependencies:
  - mirror-packages
  - build
  script:
    - mkdir -p bus/$CI_BUILD_NAME
    - Rscript -e 'source(Sys.getenv("CI_TOOLS")); if (length(pkgs<-packages.dcf("DESCRIPTION", "all"))) install.packages(pkgs, repos=file.path("file:",normalizePath("bus/mirror-packages/cran")))'
    - cd bus/$CI_BUILD_NAME
    - Rscript -e 'file.copy(download.packages("data.cube", repos=file.path("file:",normalizePath("../build/cran")))[,2], ".")'
    - R CMD check $(ls -1t data.cube_*.tar.gz | head -n 1)
  artifacts:
    expire_in: 2 weeks
    when: always
    paths:
      - bus

test-r-3.1.0-cran:
  stage: test
  tags:
    - linux
  image: docker.io/jangorecki/r-3.1.0
  variables:
    _R_CHECK_CRAN_INCOMING_: "TRUE"
    _R_CHECK_CRAN_INCOMING_REMOTE_: "TRUE"
  dependencies:
  - mirror-packages
  - build
  script:
    - mkdir -p bus/$CI_BUILD_NAME
    - curl -O $CI_TOOLS
    - R3script -e 'source("packages.R"); if (length(pkgs<-packages.dcf("DESCRIPTION", "all"))) install.packages(pkgs, repos=file.path("file:",normalizePath("bus/mirror-packages/cran")))'
    - cd bus/$CI_BUILD_NAME
    - R3script -e 'file.copy(download.packages("data.cube", repos=file.path("file:",normalizePath("../build/cran")))[,2], ".")'
    - R3 CMD check --no-manual --as-cran $(ls -1t data.cube_*.tar.gz | head -n 1)
  artifacts:
    expire_in: 2 weeks
    when: always
    paths:
      - bus

integration:
  stage: integration
  tags:
    - linux
  only:
    - master
  image: docker.io/jangorecki/r-builder
  dependencies:
  - mirror-packages
  - build
  - test-r-release
  - test-r-3.1.0-cran
  script:
    - mkdir -p bus/$CI_BUILD_NAME
    - cp -R bus/mirror-packages/cran bus/$CI_BUILD_NAME/
    - mv $(ls -1t bus/build/cran/src/contrib/data.cube_*.tar.gz | head -n 1) bus/$CI_BUILD_NAME/cran/src/contrib
    - Rscript -e 'tools::write_PACKAGES(contrib.url("bus/integration/cran"), addFiles=TRUE, fields="Revision")'
  artifacts:
    expire_in: 2 weeks
    paths:
      - bus

pages:
  stage: deploy
  environment: production
  tags:
    - linux
  only:
    - master
  image: docker.io/ubuntu
  dependencies:
  - integration
  script:
    - mkdir -p public
    - cp -r bus/integration/cran/* public
    - cat public/src/contrib/PACKAGES
  artifacts:
    expire_in: 2 weeks
    paths:
      - public
